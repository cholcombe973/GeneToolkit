package digitalLabManagementSystem;


import java.io.*;
import java.util.*;
import org.kxml2.io.*;
import org.xmlpull.v1.*;

/**
 *
 * <p>Title: XMLModule</p>
 * <p>Description: This is a key module to the functioning of the framework.  It handles the parsing
 * of all the xml files. </p>
 * <p>Copyright: Copyright (c) 2004</p>
 * @author Chris Holcombe
 * @version 1.0
 */
public class XMLModule extends Module{
  private File storageFile;
  private ReferenceEngine re;
  private Hashtable tags = new Hashtable();
  private ModuleManager ref;
  private XmlPullParser xpp;
  KXmlParser parse = new KXmlParser();

  public XMLModule(ReferenceEngine re) {
    this.re = re;
  }
  public void initModule(){
    setName("XML Module");
    setAuthor("Chris Holcombe");
    setDescription("This module handles XML parsing");
    setVersion("1.0");
    ref = (ModuleManager)re.getReference("ModuleManager");
    setModulePID(ref.getPID());
    ref.registerModule(".xml",this);
  }
  public void cleanupModule(){
    if(ref!=null)
      ref.unregisterModule(".xml");
  }
  public Hashtable parseFile(){
    try {
      parse.setInput(new FileReader(storageFile));
      parse.nextTag();
      parse.require(XmlPullParser.START_TAG, null, "Module");

      while (parse.nextTag() == XmlPullParser.START_TAG) {
        //parse.require(XmlPullParser.START_TAG, null, "text");

        // handle element content
        System.out.println("text content: " + parse.nextText());

        //parse.require(XmlPullParser.END_TAG, null, "text");
      }

      parse.require(XmlPullParser.END_TAG, null, "Module");
    }catch (IOException ex) {System.out.println("IOException in XMLMOdule parseFile(): " + ex);}
    catch (XmlPullParserException ex) {System.out.println("XMLPullParserException in XMLModule parseFile(): " + ex);}
    return null;
/*
    try {
      FileInputStream in = new FileInputStream(storageFile);
      String tag = "";
      String value = "";
      int val = 0;
      while((val=in.read())!=-1){
        if(((char)val) == '<'){
          if(value!=""){
            //store tag and value
            tags.put(tag,value);
            System.out.println("Putting: tag: " + tag + " value: " + value);
          }
          value = "";
          tag = "";
          while(((char)(val=in.read())) !='>'){
            tag +=(char)val;
          }
        }
        if((char)val!='>'){
          value += (char) val;
        }
      }
      in.close();
      return tags;
    }catch (FileNotFoundException ex) {System.out.println("FileNotFoundException in XMLModule parseFile(): " + ex);}
    catch(IOException e){System.out.println("IOException in XMLModule parseFile(): " + e);}
    return null;
*/
  }
  public void setParseFile(File storageFile){
    this.storageFile = storageFile;
  }

}
